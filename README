# status

work in progress.  there is some basic, incomplete, insecure (!)
code to make a connection and execute a command.


# about

this package contains a ssh client & the the library that the client
uses.  an ssh server is not plannend.  the goals is to let plan 9
& inferno users use resources from another (unix) machine:  interactive
shell, file server, network.


# todo

- security problem:  i don't know how big (number of bits) the dh
  client side secret should be, and whether we should verify if it's
  correct/secure.

- make it work with normal sshd, not just openssh+debugging compiled in.
- support more algorithms?  e.g. more key exchange, more encryption,
  authentication (integrity).  perhaps even compression (should be
  easy).
- rekeying
- enforce minimum packet length
- zero out sensitive data after use.  can we do that with ipint too?
- make padding random length?  make padding for packet containing password larger than minimum.
- cipher,mac,other negotiation
- other ciphers:  3dec-cbc, aes192-cbc, aes256-cbc, arcfour, idea-cbc, blowfish-cbc, none (these are supported by inferno)
- other macs:  hmac-sha1-96, hmac-md5, hmac-md5-96, none (easy on inferno)
- other key exchange method: diffie-hellman-group14-sha1
- sftp, complete protocol
- do public/private key authentication
- ctr encryption modes in rfc4344
- fix ssh-rsa host key support
- do newer diffie-hellman key exchange.  without fixed primes/group.
  precomputations may make original ssh2 rfc's scheme insecure in the
  future, according to newer rfc.
- think about sshnet

# docs

see doc/rfc.txt for the relevant rfc's and some excerpts from it.
