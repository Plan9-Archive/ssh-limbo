# status

work in progress.  there is some basic, incomplete, insecure (!)
code to make a connection and execute a command.


# about

this package contains a ssh client & the the library that the client
uses.  an ssh server is not plannend.  the goals is to let plan 9
& inferno users use resources from another (unix) machine:  interactive
shell, file server, network.


# todo

- security problem:  i don't know how big (number of bits) the dh
  client side secret should be, and whether we should verify if it's
  correct/secure.

- sshlib: rekeying
- ssh: channel windows for ssh.b
- sftpfs: find & fix races with fids
- sftpfs: more proper accounting of open/closed files
- sftpfs: better think about whether we'll block in the wrong place
- sftpfs: look at iounit & max packet sizes.
- sftpfs: with open (create), setstat, mkdir (perhaps others), don't send dummy
  values for attrs, just don't send them at all (and set the flags
  field appropriately).
- factotum:  dsa,rsa: try all matching keys (or, send public key to sshd to ask whether it is eligible for authentication).
- factotum:  change proto=rsa & proto=dsa to not query user for keys if none matching.
        IO.findkeys() probably needs flag to not require a match:
        "keymanc <-= (attrs, 1, kc);     # TO DO: 1 => 0 for not needed"
- sshlib: check that dh param from server is valid/sane?
- sshlib: zero out sensitive data after use.  can we do that with ipint too?  and encryption algorithm state.
- think about sshnet
- manual pages
- sshlib: do auth keyboard-interactive?  is there a generic challenge-response method in factotum?

- sshlib: make it faster.  the expmod() calls for the dh exchange take up seconds.  perhaps i use too many bits?
- sshlib: do rfc4419 "diffie-hellman-group-exchange-sha256".  inferno first needs sha256 for that.
- sshlib: compression.  it's hard in inferno, because we have to flush the
  buffers for each packet (but keep compression state).  inferno's
  deflate filter doesn't support that.
- crypto:  cast128-cbc, test/fix blowfish, sha256, ripemd160
- test IDEA?
- test against other sshd's than openssh (e.g. dropbear, lsh, more?)

# docs

see doc/rfc.txt for the relevant rfc's and some excerpts from it.
